name: ðŸš€ Release
on:
  push:
    tags: [v*]
jobs:
  release:
    name: ðŸš€ Release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Setup Perl
      uses: shogo82148/actions-setup-perl@v1
    - name: Install Release Dependencies
      run: cpanm -qn Module::Build CPAN::Uploader

    # CPAN
    - name: Package the Release
      id: package
      run: perl Build.PL && ./Build manifest && ./Build dist && echo "tarball=$(./Build tarball_name )" >> $GITHUB_OUTPUT
    - name: Generate Release Changes
      run: ./Build latest_changes
    - name: Release on CPAN
      env:
        CPANPASS: ${{ secrets.CPAN_PASSWORD }}
      run: cpan-upload --user DWHEELER --password "$CPANPASS" '${{ steps.package.outputs.tarball }}'

    # Docker
    - name: Build Image
      run: docker build --pull -t ${{ secrets.DOCKER_USER }}/pg_prove:latest -t ${{ secrets.DOCKER_USER }}/pg_prove:${{ github.ref_name }} -f dist/Dockerfile .
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    - name: Push the Image
      run: docker push -a ${{ secrets.DOCKER_USER }}/pg_prove

    # GitHub
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: "Release ${{ env.VERSION }}"
        files: ${{ steps.package.outputs.tarball }}
        body_path: ${{ steps.notes.outputs.file }}
      if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )
